<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="flightprojectapi-proapi-suite.xml" />
	<munit:test name="flightprojectapi-proapiFlow-test-success" doc:id="1863b7f1-2e0e-41de-bf4b-b1d1ad4b63c0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock RequestToTheFlightsAPI" doc:id="3527899b-31a8-452b-ae1b-8057a870d05a" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cf460abd-4d21-4556-9215-62b254fc0a52" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://flightprojectapiproapiFlowtestsuccess/mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://flightprojectapiproapiFlowtestsuccess/mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://flightprojectapiproapiFlowtestsuccess/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy PuttingTheResultsIntoAVariableWhichIsAnArray" doc:id="2b625642-2be9-4c0d-9913-04aa056e0b0a" processor="ee:transform">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb957ec2-31cf-4bbf-ac6b-875968123ab9" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:queue doc:name="Store actual value" doc:id="06570852-1004-48b8-bef8-b62d4e9520a2" queueName="Before PuttingTheResultsIntoAVariableWhichIsAnArray">
						<munit-tools:value ><![CDATA[#[{
  "message": message,
  "variables": vars
}]]]></munit-tools:value>
					</munit-tools:queue>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:queue doc:name="Store actual value" doc:id="836cf3d6-f823-4747-8171-60c6791862d0" queueName="After PuttingTheResultsIntoAVariableWhichIsAnArray">
						<munit-tools:value ><![CDATA[#[{
  "message": message,
  "variables": vars
}]]]></munit-tools:value>
					</munit-tools:queue>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="dfcf2b84-afcc-4058-a21a-8f8ee68435d6" >
				<munit:payload value="#[readUrl('classpath://flightprojectapiproapiFlowtestsuccess/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://flightprojectapiproapiFlowtestsuccess/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to flightprojectapi-proapiFlow" doc:id="9d014e1c-de44-4457-be8b-f538f32e2065" name="flightprojectapi-proapiFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5626fb36-0fc3-494a-9a34-81c86c4a69d4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import flightprojectapiproapiFlowtestsuccess::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:assert-equals doc:name="Assert queues' sizes" doc:id="768af76b-5e48-41ef-b90e-02fa3362b247" actual="#[[&#10;  MunitTools::queueSize('Before PuttingTheResultsIntoAVariableWhichIsAnArray'),&#10;  MunitTools::queueSize('After PuttingTheResultsIntoAVariableWhichIsAnArray')&#10;]]" expected="#[[&#10;  3,&#10;  3&#10;]]" message="The queues' sizes do not match"/>
			<foreach doc:name="Assert before" doc:id="8cd7c34c-c93b-4123-a221-d3f662ca95f7" collection="#[readUrl('classpath://flightprojectapiproapiFlowtestsuccess/spy_assert_before_collection.dwl')]">
				<munit-tools:dequeue doc:name="Retrieve actual value" doc:id="2e5bf983-fcea-43ba-8d0b-76f5f9009cc1" queueName="Before PuttingTheResultsIntoAVariableWhichIsAnArray" target="actual"/>
				<munit-tools:assert doc:name="Assert payload" doc:id="25931288-539c-4878-9759-d9ceaacd7361" message="The payload does not match">
					<munit-tools:that ><![CDATA[#[%dw 2.0
import flightprojectapiproapiFlowtestsuccess::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
				</munit-tools:assert>
				<munit-tools:assert doc:name="Assert attributes" doc:id="596796e7-766e-485c-a1bd-5d2697e7e2a0" message="The attributes do not match">
					<munit-tools:that ><![CDATA[#[%dw 2.0
import flightprojectapiproapiFlowtestsuccess::spy_assert_attributes
---
spy_assert_attributes::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
				</munit-tools:assert>
				<munit-tools:assert doc:name="Assert variables" doc:id="241a114d-8602-4515-9bc5-503c5c35869a" message="The variables do not match">
					<munit-tools:that ><![CDATA[#[%dw 2.0
import flightprojectapiproapiFlowtestsuccess::spy_assert_variables
---
spy_assert_variables::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
				</munit-tools:assert>
			</foreach>
			<foreach doc:name="Assert after" doc:id="714889d4-1ec9-48c6-a380-f44d22ce183b" collection="#[readUrl('classpath://flightprojectapiproapiFlowtestsuccess/spy_assert_after_collection.dwl')]">
				<munit-tools:dequeue doc:name="Retrieve actual value" doc:id="64d252f1-edde-4b27-87e1-96d9bceff13b" queueName="After PuttingTheResultsIntoAVariableWhichIsAnArray" target="actual"/>
				<munit-tools:assert doc:name="Assert payload" doc:id="051260ec-7e55-4b8d-af99-4e59201f9bed" message="The payload does not match">
					<munit-tools:that ><![CDATA[#[%dw 2.0
import flightprojectapiproapiFlowtestsuccess::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
				</munit-tools:assert>
			</foreach>
		</munit:validation>
	</munit:test>

</mule>
